openapi: 3.0.0
info:
  title: API de gestion de réservations de terrains
  description: API permettant de gérer les réservations de terrains, utilisateurs et terrains disponibles.
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
    description: Serveur local de développement

paths:
  /users:
    get:
      summary: Récupère tous les utilisateurs
      description: Retourne une liste de tous les utilisateurs enregistrés.
      responses:
        '200':
          description: Liste des utilisateurs récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/users"
                  _embedded:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            createdAt:
                              type: string
                              format: date-time
                            updatedAt:
                              type: string
                              format: date-time
                            _links:
                              type: object
                              properties:
                                self:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: "/users/{id}"


    post:
      summary: Crée un nouvel utilisateur
      description: Permet de créer un utilisateur avec un nom d'utilisateur.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Le nom d'utilisateur.
                password:
                  type: string
                  description: Le mot de passe de l'utilisateur.
      responses:
        '201':
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
        '400':
          description: Problème avec les données de création de l'utilisateur
        '500':
          description: Erreur lors de la création de l'utilisateur

  /users/{id}:
    get:
      summary: Récupère un utilisateur spécifique
      description: Retourne les détails d'un utilisateur spécifique par ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détails de l'utilisateur récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur lors de la récupération de l'utilisateur

    delete:
      summary: Supprimer un utilisateur
      description: Supprime un utilisateur spécifique par ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Utilisateur supprimé avec succès
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur lors de la suppression de l'utilisateur

  /terrains:
    get:
      summary: Récupère tous les terrains
      description: Retourne une liste de tous les terrains disponibles.
      responses:
        '200':
          description: Liste des terrains récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    is_available:
                      type: boolean
                    _links:
                      type: object
                      properties:
                        self:
                          type: object
                          properties:
                            href:
                              type: string
                              example: "/terrains/{id}"
        '500':
          description: Erreur lors de la récupération des terrains

  /terrains/{id}:
    get:
      summary: Récupère un terrain spécifique
      description: Retourne les détails d'un terrain spécifique par ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détails du terrain récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_available:
                    type: boolean
        '404':
          description: Terrain non trouvé
        '500':
          description: Erreur lors de la récupération du terrain

    put:
      summary: Met à jour un terrain spécifique
      description: Permet de mettre à jour les informations d'un terrain (disponibilité).
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_available:
                  type: boolean
                  description: La disponibilité du terrain.
      responses:
        '200':
          description: Terrain mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  is_available:
                    type: boolean
        '404':
          description: Terrain non trouvé
        '500':
          description: Erreur lors de la mise à jour du terrain

  /reservations:
    get:
      summary: Récupère toutes les réservations
      description: Retourne une liste de toutes les réservations existantes.
      responses:
        '200':
          description: Liste des réservations récupérée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/reservations"
                  _embedded:
                    type: object
                    properties:
                      reservations:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            user_id:
                              type: integer
                            terrain_id:
                              type: integer
                            reservation_date:
                              type: string
                              format: date
                            reservation_time:
                              type: string
                              format: time
                            duration:
                              type: integer
                            _links:
                              type: object
                              properties:
                                self:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: "/reservations/{id}"
                                user:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: "/users/{user_id}"
                                terrain:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                                      example: "/terrains/{terrain_id}"
        '500':
          description: Erreur lors de la récupération des réservations

    post:
      summary: Crée une nouvelle réservation
      description: Permet de créer une nouvelle réservation pour un utilisateur sur un terrain spécifique.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - terrain_name
                - reservation_date
                - reservation_time
              properties:
                username:
                  type: string
                  description: Le nom d'utilisateur effectuant la réservation.
                terrain_name:
                  type: string
                  description: Le nom du terrain à réserver.
                reservation_date:
                  type: string
                  format: date
                  description: La date de la réservation (format AAAA-MM-JJ).
                reservation_time:
                  type: string
                  format: time
                  description: L'heure de la réservation (format HH:mm:ss).
                duration:
                  type: integer
                  default: 45
                  description: La durée de la réservation en minutes.
      responses:
        '201':
          description: Réservation créée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  terrain_id:
                    type: integer
                  reservation_date:
                    type: string
                    format: date
                  reservation_time:
                    type: string
                    format: time
                  duration:
                    type: integer
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/reservations/{id}"
                      user:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/users/{user_id}"
                      terrain:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/terrains/{terrain_id}"
        '400':
          description: Problème avec les données fournies pour la réservation
        '500':
          description: Erreur lors de la création de la réservation

  /reservations/{id}:
    get:
      summary: Récupère une réservation spécifique
      description: Retourne les détails d'une réservation spécifique par ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détails de la réservation récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  terrain_id:
                    type: integer
                  reservation_date:
                    type: string
                    format: date
                  reservation_time:
                    type: string
                    format: time
                  duration:
                    type: integer
        '404':
          description: Réservation non trouvée
        '500':
          description: Erreur lors de la récupération de la réservation

    delete:
      summary: Supprimer une réservation
      description: Supprime une réservation spécifique par ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Réservation supprimée avec succès
